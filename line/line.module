<?php 
class Line extends Entity {
	
	
	  /**
   * The name of the profile type.
   *
   * @var string
   */
  public $des;

  /**
   * The profile label.
   *
   * @var string
   */
  public $src;

  /**
   * The line id of the line.
   *
   * @var integer
   */
  public $lid;
  /**
   * duration in days.
   *
   * @var integer
   */
  public $duration;
  /**
   * duration in days.
   *
   * @var integer
   */
  public $price;

  /**
   * The Unix timestamp when the profile was created.
   *
   * @var integer
   */
  public $created;

  /**
   * The Unix timestamp when the profile was most recently saved.
   *
   * @var integer
   */
  public $changed;
	  /**
   * Returns the full url() for the line.
   */
  public function url() {
    $uri = $this->uri();
    return url($uri['path'], $uri);
  }

  /**
   * Returns the drupal path to this line.
   */
  public function path() {
    $uri = $this->uri();
    return $uri['path'];
  }

  public function defaultUri() {
    return array(
      'path' => 'line/' . $this->lid,
      'options' => array('fragment' => 'profile-' . $this->type),
    );
  }

  public function buildContent($view_mode = 'full', $langcode = NULL) {
  	$content = array();
  	return entity_get_controller($this->entityType)->buildContent($this, $view_mode, $langcode, $content);
  }
}

/**
 * Implements hook_entity_info().
 */
function line_entity_info() {
  $return = array(
    'line' => array(
      'label' => t('Line'),
      'plural label' => t('Lines'),
      'description' => '旅行线路',
      'entity class' => 'Line',
      'controller class' => 'EntityAPIController',
      'base table' => 'line',
      'fieldable' => TRUE,
      'view modes' => array(
        'account' => array(
          'label' => t('User account'),
          'custom settings' => FALSE,
        ),
      ),
      'entity keys' => array(
        'id' => 'pid',
        'bundle' => 'type',
        'label' => 'label',
      ),
      'bundles' => array(),
      'bundle keys' => array(
        'bundle' => 'type',
      ),
      'uri callback' => 'entity_class_uri',
      'access callback' => 'line_access',
      'module' => 'line',
      'metadata controller class' => 'LineMetadataController'
    ),
  );

  // Add bundle info but bypass entity_load() as we cannot use it here.
  $types = db_select('profile_type', 'p')
    ->fields('p')
    ->execute()
    ->fetchAllAssoc('type');

  foreach ($types as $type => $info) {
    $return['profile2']['bundles'][$type] = array(
      'label' => $info->label,
      'admin' => array(
        'path' => 'admin/structure/profiles/manage/%profile2_type',
        'real path' => 'admin/structure/profiles/manage/' . $type,
        'bundle argument' => 4,
        'access arguments' => array('administer profiles'),
      ),
    );
  }

  // Support entity cache module.
  if (module_exists('entitycache')) {
    $return['profile2']['field cache'] = FALSE;
    $return['profile2']['entity cache'] = TRUE;
  }

  return $return;
}

function profile2_access($op, $profile = NULL, $account = NULL) {
  if (user_access('administer profiles', $account)) {
    return TRUE;
  }
  if ($op == 'create' || $op == 'update') {
    $op = 'edit';
  }
  // Allow modules to grant / deny access.
  $access = module_invoke_all('profile2_access', $op, $profile, $account);

  // Only grant access if at least one module granted access and no one denied
  // access.
  if (in_array(FALSE, $access, TRUE)) {
    return FALSE;
  }
  elseif (in_array(TRUE, $access, TRUE)) {
    return TRUE;
  }
  return FALSE;
}

/**
 * Implements hook_permission().
 */
function line_permission() {
  $permissions = array(
    'administer profile types' =>  array(
      'title' => t('Administer profile types'),
      'description' => t('Create and delete fields on user profiles, and set their permissions.'),
    ),
    'administer profiles' =>  array(
      'title' => t('Administer profiles'),
      'description' => t('Edit and view all user profiles.'),
    ),
  );
  // Generate per profile type permissions.
  foreach (profile2_get_types() as $type) {
    $type_name = check_plain($type->type);
    $permissions += array(
      "edit own $type_name profile" => array(
        'title' => t('%type_name: Edit own profile', array('%type_name' => $type->label)),
      ),
      "edit any $type_name profile" => array(
        'title' => t('%type_name: Edit any profile', array('%type_name' => $type->label)),
      ),
      "view own $type_name profile" => array(
        'title' => t('%type_name: View own profile', array('%type_name' => $type->label)),
      ),
      "view any $type_name profile" => array(
        'title' => t('%type_name: View any profile', array('%type_name' => $type->label)),
      ),
    );
  }
  return $permissions;
}